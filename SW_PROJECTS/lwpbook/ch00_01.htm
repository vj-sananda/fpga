<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Preface (Perl &amp; LWP)</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" >
<script type="text/javascript">var lwp_pageid="ch00_01"; var lwp_lastmod=
  'Time-stamp: "2007-03-29 18:54:11 AKDT sburke@cpan.org"';  </script>
<link rel="stylesheet" type="text/css" href="lwpstyle.css" />
</head>
<body id='ch00_01' class='lwp lwp_ch00_01' lang='en-US' >
<noscript><p align=center>^ <a href="./index.html">Perl and LWP</a> ^</p></noscript>
<script type="text/javascript" src="./lwp_nav.js"></script>

<h1 class="chapter">Preface</h1>

<div class="htmltoc"><h4 class="tochead">Contents:</h4>
<p> <a href="#perllwp-PREF-SECT-0">Preface</a><br />
 <a href="#perllwp-PREF-SECT-1">Audience for This Book</a><br />
<a href="ch00_02.htm">Structure of This Book</a><br />
<a href="ch00_03.htm">Order of Chapters</a><br />
<a href="ch00_04.htm">Important Standards Documents</a><br />
<a href="ch00_05.htm">Conventions Used in This Book</a><br />
<a href="ch00_06.htm">Comments &amp; Questions</a><br />
<a href="ch00_07.htm">Acknowledgments</a></p></div>


<p><a name="perllwp-PREF-SECT-0" ></a>
<a href=
 "http://interglacial.com/~sburke/pub/perl.html"
 >Perl</a>
 soared to popularity as a language for creating and <a href=
 "http://www.oreilly.com/catalog/perlwsmng/"
 >managing</a> web
content. Perl is equally adept at consuming information on the Web.
Most web sites are created for people, but quite often you want to
automate tasks that involve accessing a web site in a repetitive way.
Such tasks could be as simple as saying
"here's a list of URLs; I want to
be emailed if any of them stop working," or they
could involve more complex processing of any number of pages. This
book is about using LWP (the Library for World Wide Web in Perl) and
Perl to fetch and process web pages.
</p>

<p>For example, if you want to compare the prices of all
O'Reilly books on Amazon.com and bn.com, you could
look at each page yourself and keep track of the prices. Or you could
write an LWP program to fetch the product pages, extract the prices,
and generate a report. O'Reilly has a lot of books
in print, and after reading this one, you'll be able
to write and run the program much more quickly than you could visit
every catalog page.
</p>

<p>Consider also a situation in which a particular page has links to
several dozen files (images, music, and so on) that you want to
download. You could download each individually, by monotonously
selecting each link in your browser and choosing Save as..., or you
could dash off a short LWP program that scans for URLs in that page
and downloads each, unattended.
</p>

<p>Besides extracting data from web pages, you can also automate
submitting data through web forms. Whether this is a matter of
uploading 50 image files through your company's
intranet interface, or searching the local library's
online card catalog every week for any new books with
"Navajo" in the title,
it's worth the time and piece of mind to automate
repetitive processes by writing LWP programs to submit data into
forms and scan the resulting data.
</p>
<div class="sect1"><a name="perllwp-PREF-SECT-1" ></a>
<h2 class="sect1">0.1. Audience for This Book</h2>

<p>This book is aimed at someone who already knows Perl and HTML, but I
don't assume you're an expert at
either. I give quick refreshers on some of the quirkier aspects of
HTML (e.g., forms), but in general, I assume you know what each of
the HTML tags means. If you know basic regular expressions and are
familiar with references and maybe even objects, you have all the
Perl skills you need to use this book.
</p>

<p>If you're new to Perl, consider reading
<em class="emphasis">Learning Perl</em> (O'Reilly) and
maybe also <em class="emphasis">The Perl Cookbook</em>
(O'Reilly). If your HTML is shaky, try the
<em class="emphasis">HTML Pocket Reference</em> or <em class="emphasis">HTML: The
Definitive Guide</em> (O'Reilly). If you
don't feel comfortable using objects in Perl,
reading <a href="appg_01.htm">Appendix G, "User's View of Object-Oriented Modules"</a> in this book should be enough to
bring you up to speed.
</p>

</div>

<script type="text/javascript">endpage();</script>
</body></html>
