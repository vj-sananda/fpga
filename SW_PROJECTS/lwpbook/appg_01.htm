<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>User's View of Object-Oriented Modules (Perl &amp; LWP)</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" >
<script type="text/javascript">var lwp_pageid="appg_01"; var lwp_lastmod=
  'Time-stamp: "2007-03-28 19:32:53 AKDT sburke@cpan.org"';  </script>
<link rel="stylesheet" type="text/css" href="lwpstyle.css" />
</head>
<body id='appg_01' class='lwp lwp_appg_01' lang='en-US' >
<noscript><p align=center>^ <a href="./index.html">Perl and LWP</a> ^</p></noscript>
<script type="text/javascript" src="./lwp_nav.js"></script>

<h1 class="chapter">Appendix G. User's View of Object-Oriented Modules</h1>
<div class="htmltoc"><h4 class="tochead">Contents:</h4>
  <p> <a href="#perllwp-APP-G-SECT-1">A User's View of Object-Oriented Modules</a><br />
<a href="appg_02.htm">Modules and Their Functional Interfaces</a><br />
<a href="appg_03.htm">Modules with Object-Oriented Interfaces</a><br />
<a href="appg_04.htm">What Can You Do with Objects?</a><br />
<a href="appg_05.htm">What's in an Object?</a><br />
<a href="appg_06.htm">What Is an Object Value?</a><br />
<a href="appg_07.htm">So Why Do Some Modules Use Objects?</a><br />
<a href="appg_08.htm">The Gory Details</a><br /></p></div><p>The following article by Sean M. Burke first appeared in
<em class="emphasis">The Perl Journal</em> #17 and is copyright 2000,
<em class="emphasis">The Perl Journal</em>. It appears courtesy of Jon
Orwant and <em class="emphasis">The Perl Journal</em>. This document may
be distributed under the same terms as Perl itself.
</p><div class="sect1"><a name="perllwp-APP-G-SECT-1"></a>
<h2 class="sect1">G.1. A User's View of Object-Oriented Modules</h2>

<p>The first time that most Perl programmers run into object-oriented
programming is when they need to use a module whose interface is
object-oriented. This is often a mystifying experience, since talk of
"methods" and
"constructors" is unintelligible to
programmers who thought that functions and variables was all there
was to worry about.
</p>

<p>Articles and books that explain object-oriented programming (OOP), do
so in terms of how to program that way. That's
understandable, and if you learn to write object-oriented code of
your own, you'd find it easy to use object-oriented
code that others write. But this approach is the
<em class="emphasis">long</em> way around for people whose immediate goal
is just to use existing object-oriented modules, but who
don't yet want to know all the gory details of
having to write such modules for themselves.
</p>

<p>This article is for those programmers&#x2014;programmers who want to
know about objects from the perspective of using object-oriented
modules.
</p>

</div>

<script type="text/javascript">endpage();</script>
</body></html>
